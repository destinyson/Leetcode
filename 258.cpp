/**************************************258 - 各位相加*************************************

给定一个非负整数 num，反复将各个位上的数字相加，直到结果为一位数。

示例:

输入: 38
输出: 2
解释: 各位相加的过程为：3 + 8 = 11, 1 + 1 = 2。 由于 2 是一位数，所以返回 2。

进阶:
你可以不使用循环或者递归，且在 O(1) 时间复杂度内解决这个问题吗？
*****************************************************************************************************/

//任何一个整数，对9取余，和该数各位之和对9取余一致

//故不断迭代的话，结果一定是对9取余的余数（如果为0则改成9）

//注意特殊情况0

class Solution {
public:
    int addDigits(int num) {
        if (num == 0)
            return 0;
        else
            return num % 9 == 0 ? 9 : (num % 9);
    }
};
