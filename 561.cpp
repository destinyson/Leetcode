/**************************************561 - 数组拆分 I*************************************

给定长度为 2n 的数组, 你的任务是将这些数分成 n 对, 例如 (a1, b1), (a2, b2), ..., (an, bn) ，使得从1 到 n 的 min(ai, bi) 总和最大。

示例 1:

输入: [1,4,3,2]

输出: 4
解释: n 等于 2, 最大总和为 4 = min(1, 2) + min(3, 4).
提示:

n 是正整数,范围在 [1, 10000].
数组中的元素范围在 [-10000, 10000].
*****************************************************************************************************/

//使得较小值之和最大，易得拆分方式为：最大的数和第二大的数一组，第三大的数和第四大的数一组……依此类推

//故先将原向量排序，再隔一个元素加一个元素，所得即为最终结果

class Solution {
public:
    int arrayPairSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int len = nums.size();
        int ans = 0;
        for (int i = 0; i < len; i = i + 2)
            ans = ans + nums[i];
        return ans;
    }
};
