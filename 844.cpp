/**************************************844 - 比较含退格的字符串*************************************

给定 S 和 T 两个字符串，当它们分别被输入到空白的文本编辑器后，判断二者是否相等，并返回结果。 # 代表退格字符。

注意：如果对空文本输入退格字符，文本继续为空。


示例 1：

输入：S = "ab#c", T = "ad#c"
输出：true
解释：S 和 T 都会变成 “ac”。

示例 2：

输入：S = "ab##", T = "c#d#"
输出：true
解释：S 和 T 都会变成 “”。

示例 3：

输入：S = "a##c", T = "#a#c"
输出：true
解释：S 和 T 都会变成 “c”。

示例 4：

输入：S = "a#c", T = "b"
输出：false
解释：S 会变成 “c”，但 T 仍然是 “b”。
*****************************************************************************************************/

//退格，可以用弹栈模拟

class Solution {
public:
    bool backspaceCompare(string S, string T) {
        stack<int> s;
        stack<int> t;
        int slen = S.length();
        int tlen = T.length();
        for (int i = 0; i < slen; i++)
        {
            if (S[i] == '#' && s.size() > 0)
                s.pop();
            else if (S[i] != '#')
                s.push(S[i]);
        }
        for (int i = 0; i < tlen; i++)
        {
            if (T[i] == '#' && t.size() > 0)
                t.pop();
            else if (T[i] != '#')
                t.push(T[i]);
        }
        if (s.size() == t.size())
        {
            while (s.size())
            {
                if (s.top() != t.top())
                    return false;
                s.pop();
                t.pop();
            }
            return true;
        }
        return false;
    }
};
